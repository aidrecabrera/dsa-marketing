// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dsa_marketing.Models;

#nullable disable

namespace dsa_marketing.Migrations
{
    [DbContext(typeof(DsaClusterContext))]
    [Migration("20231011190843_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dsa_marketing.Models.AbstractQuotation", b =>
                {
                    b.Property<int>("AbstractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbstractId"));

                    b.Property<string>("AwardedToThe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("OfficeLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OfficeOfThe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OpeningQuotationsOffice")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AbstractId")
                        .HasName("PK__Abstract__467E99E828743250");

                    b.HasIndex("DocumentId");

                    b.ToTable("AbstractQuotation", (string)null);
                });

            modelBuilder.Entity("dsa_marketing.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("ModeOfProcurement")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("OrderId")
                        .HasName("PK__Purchase__C3905BCF2225EE71");

                    b.HasIndex("DocumentId");

                    b.ToTable("PurchaseOrder", (string)null);
                });

            modelBuilder.Entity("dsa_marketing.Models.PurchaseRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<string>("ApprovedForIssuanceName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeliveryLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DeliveryTerms")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RequestNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RequestedByName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RequestorName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Requisition")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RequestId")
                        .HasName("PK__Purchase__33A8517A0003AF50");

                    b.HasIndex("DocumentId");

                    b.ToTable("PurchaseRequest", (string)null);
                });

            modelBuilder.Entity("dsa_marketing.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("BarangayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MunicipalityName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A6BB5BA0BB7");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("dsa_marketing.Models.TransactionDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("BarangayTreasurerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PunongBarangayName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId")
                        .HasName("PK__Transact__1ABEEF0F895E8B39");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionDocuments");
                });

            modelBuilder.Entity("dsa_marketing.Models.TransactionItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Particulars")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ItemId")
                        .HasName("PK__Transact__727E838B52808D46");

                    b.HasIndex("DocumentId");

                    b.ToTable("TransactionItems");
                });

            modelBuilder.Entity("dsa_marketing.Models.AbstractQuotation", b =>
                {
                    b.HasOne("dsa_marketing.Models.TransactionDocument", "Document")
                        .WithMany("AbstractQuotations")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK__AbstractQ__Docum__76969D2E");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("dsa_marketing.Models.PurchaseOrder", b =>
                {
                    b.HasOne("dsa_marketing.Models.TransactionDocument", "Document")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK__PurchaseO__Docum__73BA3083");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("dsa_marketing.Models.PurchaseRequest", b =>
                {
                    b.HasOne("dsa_marketing.Models.TransactionDocument", "Document")
                        .WithMany("PurchaseRequests")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK__PurchaseR__Docum__70DDC3D8");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("dsa_marketing.Models.TransactionDocument", b =>
                {
                    b.HasOne("dsa_marketing.Models.Transaction", "Transaction")
                        .WithMany("TransactionDocuments")
                        .HasForeignKey("TransactionId")
                        .HasConstraintName("FK__Transacti__Trans__6E01572D");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("dsa_marketing.Models.TransactionItem", b =>
                {
                    b.HasOne("dsa_marketing.Models.TransactionDocument", "Document")
                        .WithMany("TransactionItems")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK__Transacti__Docum__797309D9");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("dsa_marketing.Models.Transaction", b =>
                {
                    b.Navigation("TransactionDocuments");
                });

            modelBuilder.Entity("dsa_marketing.Models.TransactionDocument", b =>
                {
                    b.Navigation("AbstractQuotations");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("PurchaseRequests");

                    b.Navigation("TransactionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
