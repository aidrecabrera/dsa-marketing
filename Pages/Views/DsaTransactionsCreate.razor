@page "/create_transaction"
@using dsa_marketing.Models
@using Microsoft.EntityFrameworkCore
@using dsa_marketing.Pages.Components.BeautifiedComponents
@using dsa_marketing.Data

<MudGrid Class="d-flex align-content-center justify-space-between flex-grow-1 pb-3">
    <MudItem Class="d-flex flex-grow-1 align-end">
        <MudText Typo="Typo.h5" Class="fw-bold font-grotesk" Style="@($"color:{Colors.Shades.Black};")">New Transaction</MudText>
    </MudItem>
    <MudItem>
        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" OnClick="SaveTransaction">Save</MudButton>
    </MudItem>
</MudGrid>

<div class="flex flex-row gap-3">
    <div class="flex flex-column flex-grow-1 gap-3">
        <div>
            <MudCard Elevation="0" Outlined="true">
                <MudCardContent Class="gap-3">
                    <div>
                        <MudSelect T="string" Label="Municipality" @bind-Value="SelectedMunicipality">
                            @foreach (var municipality in municipalities)
                            {
                                <MudSelectItem T="string" Value="@municipality">@municipality</MudSelectItem>
                            }
                        </MudSelect>
                        <MudSelect Label="Barangay" @bind-Value="SelectedBarangay">
                            @foreach (var barangay in GetBarangays(SelectedMunicipality))
                            {
                                <MudSelectItem Value="@barangay">@barangay</MudSelectItem>
                            }
                        </MudSelect>
                    </div>
                </MudCardContent>
            </MudCard>
        </div>
        <div>
            <MudCard Elevation="0" Outlined="true">
                <MudCardContent>
                    <div class="form-group">
                        <MudTextField T="string" Label="Punong Barangay" HelperTextOnFocus="true" Variant="Variant.Outlined" @bind-Value="NewPunongBarangay" AutoFocus/>
                    </div>
                    <div class="inspection-acceptance-report">
                        <div class="form-group">
                            <MudTextField T="string" Label="Barangay Treasurer" HelperTextOnFocus="true" Variant="Variant.Outlined" @bind-Value="NewBarangayTreasurer"/>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </div>
        <div>
            <MudPaper Elevation="0" Outlined="true" Class="p-4 gap-3">
                <MudText Typo="Typo.h6">Transaction Items</MudText>
                <MudForm Model="@newItem">
                    <MudTextField Label="Unit" @bind-Value="newItem.UnitName" Variant="Variant.Text" Required="true"></MudTextField>
                    <MudTextField Label="Particulars" @bind-Value="newItem.Particulars" Variant="Variant.Text" Required="true"></MudTextField>
                    <MudTextField Label="Quantity" @bind-Value="newItem.Quantity" Variant="Variant.Text" Required="true"></MudTextField>
                    <MudTextField Label="Cost" @bind-Value="newItem.Cost" Variant="Variant.Text" Required="true"></MudTextField>
                </MudForm>
                <div class="pt-3">
                    <MudButton Type="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" OnClick="AddItemToTransactionList">
                        <span class="material-symbols-outlined">
                            save
                        </span>Add
                    </MudButton>
                    <MudButton Type="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Error" OnClick="ClearForm">
                        <span class="material-symbols-outlined">
                            clear
                        </span>
                        Clear
                    </MudButton>
                </div>
            </MudPaper>
        </div>
    </div>
    <div class="flex-grow-1">
        <MudTable Elevation="0" Outlined="true" Class="vh-100" Items="@itemList" FixedHeader="true" FixedFooter="true" EditTrigger="TableEditTrigger.RowClick" CanCancelEdit="true" CommitEditTooltip="Commit Edit" Hover="true" Breakpoint="Breakpoint.Sm" @ref="_table">
            <HeaderContent>
                <MudTh>Unit Name</MudTh>
                <MudTh>Particulars</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Unit Cost</MudTh>
                <MudTh>Amount</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Unit Name">@context.UnitName</MudTd>
                <MudTd DataLabel="Particulars">@context.Particulars</MudTd>
                <MudTd DataLabel="Quantity">@context.Quantity</MudTd>
                <MudTd DataLabel="Cost">@context.Cost</MudTd>
                <MudTd DataLabel="Amount">@context.Amount</MudTd>
            </RowTemplate>
            <RowEditingTemplate>
                <MudTd DataLabel="Unit Name">@context.UnitName</MudTd>
                <MudTd DataLabel="Particulars">
                    <MudTextField @bind-Value="@context.Particulars" Required/>
                </MudTd>
                <MudTd DataLabel="Quantity">
                    <MudTextField @bind-Value="@context.Quantity" Required/>
                </MudTd>
                <MudTd DataLabel="Cost">
                    <MudTextField @bind-Value="@context.Cost" Required Min="1"/>
                </MudTd>
                <MudTd DataLabel="Amount">
                    <MudTextField @bind-Value="@context.Amount" Required/>
                </MudTd>
                <MudTd>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" aria-label="delete" OnClick="() => DeleteRow(context)"></MudIconButton>
                </MudTd>
            </RowEditingTemplate>
        </MudTable>
    </div>
</div>

@code {
    // List of municipalities
    private List<string> municipalities = new List<string>
    {
        "Matanao",
        "Magsaysay",
        "Sarangani"
    // Add more municipalities as needed
    };

    // Dictionary to store barangays for each municipality
    private Dictionary<string, List<string>> barangays = new Dictionary<string, List<string>>
    {
        {
            "Matanao", new List<string>
            {
                "Asbang",
                "Asinan",
                "Bagumbayan",
                "Bangkal",
                "Buas",
                "Buri",
                "Camanchiles",
                "Ceboza",
                "Colonsabak",
                "Dongan-Pekong",
                "Kabasagan",
                "Kapok",
                "Kauswagan",
                "Kibao",
                "La Suerte",
                "Langa-an",
                "Lower Marber",
                "Cabligan (Managa)",
                "Manga",
                "New Katipunan",
                "New Murcia",
                "New Visayas",
                "Poblacion",
                "Saboy",
                "San Jose",
                "San Miguel",
                "San Vicente",
                "Saub",
                "Sinaragan",
                "Sinawilan",
                "Tamlangon",
                "Towak",
                "Tibongbong"
    // Add more barangays for Matanao as needed
            }
        },
        {
            "Magsaysay", new List<string>
            {
                "Poblacion",
                "Bacungan",
                "Balnate",
                "Barayong",
                "Blocon",
                "Dalawinon",
                "Dalumay",
                "Glamang",
                "Kanapolo",
                "Kasuga",
                "Mabini",
                "Malawanit",
                "New Ilocos",
                "New Opon",
                "San Isidro",
                "San Miguel",
                "Tacul",
                "Tagaytay",
                "Upper Bala"
    // Add more barangays for Magsaysay as needed
            }
        },
        {
            "Sarangani", new List<string>
            {
                "Balut Island",
                "Batuganding",
                "Konel",
                "Lipol",
                "Mabila (Poblacion)",
                "Tinina",
                "Gomtago",
                "Tagen",
                "Tucal",
                "Patuco (Sarangani Norte)",
                "Laker (Sarangani Sur)",
                "Camahual",
                "Camalig"
    // Add more barangays for Sarangani as needed
            }
        }
    // Add more municipalities and their barangays as needed
    };

    // Method to get the list of barangays based on the selected municipality
    private List<string> GetBarangays(string municipality)
    {
        if (!string.IsNullOrEmpty(municipality) && barangays.ContainsKey(municipality))
        {
            return barangays[municipality];
        }
        return new List<string>();
    }

}

@code {
    [Inject]
    private DsaClusterContext _context { get; set; }
    private UnitOfWork unitOfWork;
    
    private MudTable<TransactionItem> _table;
    private List<TransactionItem> itemList = new List<TransactionItem>();
    TransactionItem newItem = new TransactionItem();

    protected override void OnInitialized()
    {
        unitOfWork = new UnitOfWork(_context);
    }
    
    void AddItemToTransactionList()
    {
        itemList.Add(new TransactionItem
        {
            UnitName = newItem.UnitName,
            Particulars = newItem.Particulars,
            Quantity = newItem.Quantity,
            Cost = newItem.Cost,
            Amount = newItem.Quantity * newItem.Cost,
        });
        newItem = new TransactionItem();
    }
    void ClearForm()
    {
        newItem = new TransactionItem();
    }
    void DeleteRow(TransactionItem item)
    {
        itemList.Remove(item);
        _table.SetEditingItem(null);
        StateHasChanged();
    }

    private bool _isSaved = false;
    
    public required string SelectedMunicipality { get; set; }
    public required string SelectedBarangay { get; set; }
    public required string NewPunongBarangay { get; set; }
    public required string NewBarangayTreasurer { get; set; }
    
    private Transaction CreateNewTransaction()
    {
        return new Transaction
        {
            MunicipalityName = SelectedMunicipality,
            BarangayName = SelectedBarangay,
        };
    }
    
    private TransactionDocuments CreateNewDocument()
    {
        return new TransactionDocuments
        {
            PunongBarangayName = NewPunongBarangay,
            BarangayTreasurerName = NewBarangayTreasurer
        };
    }

    private void SaveTransaction()
    {
        var newTransaction = CreateNewTransaction();
        var newDocument = CreateNewDocument();
        
        unitOfWork.Transaction.Add(newTransaction);
        unitOfWork.TransactionDocuments.Add(newDocument);
        
        foreach (var item in itemList)
        {
            item.Document = newDocument; // Set the DocumentId
            unitOfWork.TransactionItems.Add(item);
            
        }
        unitOfWork.Complete();
        _isSaved = true;
        NavigateBackToOriginalPage();
    }

}

@code {

    [Inject]
    private NavigationManager? NavigationManager { get; set; }

    private void NavigateBackToOriginalPage()
    {
        NavigationManager?.NavigateTo("/transactions_list");
    }

}