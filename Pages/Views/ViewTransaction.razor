@page "/transaction_info/{TransactionId:int}"
@using dsa_marketing.Models
@using dsa_marketing.PdfServices.Immutables
@using QuestPDF.Fluent
@using dsa_marketing.Data
@using dsa_marketing.Models
@using PurchaseOrder = dsa_marketing.PdfServices.Templates.PurchaseOrder

<div class="flex flex-row gap-2 h-screen">
    <div class="flex flex-col gap-2">
            <MudPaper class="flex flex-col p-4" Elevation="3">
                <div class="pb-3">
                    <h3>DSA Marketing Transaction</h3>
                </div>
                <div>
                    <p>
                        <span class="font-bold">Municipality: </span>@transactionInformation.MunicipalityName
                    </p>
                    <p>
                        <span class="font-bold">Barangay: </span>@transactionInformation.BarangayName
                    </p>
    
                    <p>
                        <span class="font-bold">Punong Barangay: </span>@documentInformation.PunongBarangayName
                    </p>
                    <p>
                        <span class="font-bold">Treasurer: </span>@documentInformation.BarangayTreasurerName
                    </p>
                </div>
            </MudPaper>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Generate Documents</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Purchase Order</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Inspection & Acceptance Report</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Abstract of Quotation</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Purchase Request</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Acknowledgement Receipt</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Disbursment Voucher</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Canvas Form</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.AddCircleOutline" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" @onclick="GeneratePdf">Requisition Slip</MudButton>
        </div>
    <div class="flex flex-col flex-grow-1">
        <MudTable Items="@transactionItems" FixedHeader="true" class="flex flex-column" Elevation="3">
            <HeaderContent>
                <MudTh>Unit</MudTh>
                <MudTh>Particulars</MudTh>
                <MudTh>Quantity</MudTh>
                <MudTh>Cost</MudTh>
                <MudTh>Price</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Nr">@context.UnitName</MudTd>
                <MudTd DataLabel="Sign">@context.Particulars</MudTd>
                <MudTd DataLabel="Name">@context.Quantity</MudTd>
                <MudTd DataLabel="Molar mass">@context.Cost</MudTd>
                <MudTd DataLabel="Position">@context.Amount</MudTd>
            </RowTemplate>
        </MudTable>
    </div>
    @* <div> *@
    @*     @if (transactionItems.Any()) *@
    @*     { *@
    @*         <table class="table"> *@
    @*             <thead> *@
    @*             <tr> *@
    @*                 <th>Unit</th> *@
    @*                 <th>Particulars</th> *@
    @*                 <th>Quantity</th> *@
    @*                 <th>Cost</th> *@
    @*                 <th>Amount</th> *@
    @*                 <th>Actions</th> *@
    @*             </tr> *@
    @*             </thead> *@
    @*             <tbody> *@
    @*             @foreach (var item in transactionItems) *@
    @*             { *@
    @*                 <tr> *@
    @*                     <td>@item.UnitName</td> *@
    @*                     <td>@item.Particulars</td> *@
    @*                     <td>@item.Quantity</td> *@
    @*                     <td>@item.Cost</td> *@
    @*                     <td>@item.Amount</td> *@
    @*                     <td> *@
    @*                         @if (itemInEditMode == item) *@
    @*                         { *@
    @*                             <button @onclick="SaveEdit">Save</button> *@
    @*                             <button @onclick="CancelEdit">Cancel</button> *@
    @*                         } *@
    @*                         else *@
    @*                         { *@
    @*                             <button @onclick="() => EditItem(item)">Edit</button> *@
    @*                         } *@
    @*                     </td> *@
    @*                 </tr> *@
    @*                 if (itemInEditMode == item) *@
    @*                 { *@
    @*                     <tr> *@
    @*                         <td> *@
    @*                             <input @bind="item.UnitName" /> *@
    @*                         </td> *@
    @*                         <td> *@
    @*                             <input @bind="item.Particulars" /> *@
    @*                         </td> *@
    @*                         <td> *@
    @*                             <input @bind="item.Quantity" /> *@
    @*                         </td> *@
    @*                         <td> *@
    @*                             <input @bind="item.Cost" /> *@
    @*                         </td> *@
    @*                         <td> *@
    @*                             <input @bind="item.Amount" /> *@
    @*                         </td> *@
    @*                     </tr> *@
    @*                 } *@
    @*             } *@
    @*             </tbody> *@
    @*         </table> *@
    @*     } *@
    @*     else *@
    @*     { *@
    @*         <p>No transaction items found.</p> *@
    @*     } *@
    @* </div>   *@
</div>

@code {

    [Parameter]
    public int TransactionId { get; set; }

    private Transaction transactionInformation;
    private TransactionDocuments documentInformation;
    private List<TransactionItem> transactionItems;

    private TransactionItem itemInEditMode;

    [Inject]
    private DsaClusterContext _context { get; set; }

    protected override void OnParametersSet()
    {
        if (TransactionId > 0)
        {
            transactionInformation = _context.Transactions.FirstOrDefault(t => t.TransactionId == TransactionId);

            if (transactionInformation != null)
            {
                documentInformation = _context.TransactionDocuments.FirstOrDefault(d => d.DocumentId == transactionInformation.TransactionId);
                transactionItems = _context.TransactionItems.Where(ti => ti.DocumentId == transactionInformation.TransactionId).ToList();
            }
        }
    }

    void EditItem(TransactionItem item)
    {
        itemInEditMode = item;
    }

    void SaveEdit()
    {
        if (itemInEditMode != null)
        {
            _context.Update(itemInEditMode);
            _context.SaveChanges();
            itemInEditMode = null;
        }
    }

    void CancelEdit()
    {
        itemInEditMode = null;
    }
    
    [Inject]
    private DsaClusterContext ClusterContext { get; set; }
    
    PurchaseOrder _purchaseOrderPdf = new PurchaseOrder();
    UnitOfWork? _unitOfWork;

    TransactionInfo _transactionInfo;
    List<TransactionItem> itemList;
    
    protected override void OnInitialized()
    {
        _unitOfWork = new UnitOfWork(ClusterContext);
        
        var selectedTransaction = _unitOfWork.Transaction;
        var selectedDocument = _unitOfWork.TransactionDocuments;
        _transactionInfo = new TransactionInfo
        {
            Municipality = selectedTransaction.GetById(TransactionId).MunicipalityName,
            Barangay = selectedTransaction.GetById(TransactionId).BarangayName,
            PunongBarangay = selectedDocument.GetById(TransactionId).PunongBarangayName,
            BarangayTreasurer = selectedDocument.GetById(TransactionId).BarangayTreasurerName,
            Address = "Digos City",
            Supplier = "DSA Marketing",
            TermDelivery = "5 days upon receipt",
            TermPayment = "2/10. n/10"
        };
        itemList = ClusterContext.TransactionItems.ToList();
    }
    
    private void GeneratePdf()
    {
        _purchaseOrderPdf.DsaTemplate(_transactionInfo, itemList).GeneratePdf("C:\\Users\\Svene\\Documents\\DSA Marketing Documents\\Generated\\PurchaseOrder.pdf");
    }
}