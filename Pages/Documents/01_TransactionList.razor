<!-- DocumentItem.razor -->

<div class="document-item">
    <!-- Display the table of inputted items -->
    <table class="table">
        <thead>
            <tr>
                <th>Unit</th>
                <th>Particulars</th>
                <th>Quantity</th>
                <th>Unit Cost</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in documentItems)
            {
                <tr>
                    <td>@item.Unit</td>
                    <td>@item.Particulars</td>
                    <td>@item.Quantity</td>
                    <td>@item.UnitCost</td>
                    <td>@item.Amount</td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Unit -->
    <div class="form-group">
        <label for="unit">Unit:</label>
        <input type="text" id="unit" @bind="documentItem.Unit" class="form-control" />
    </div>

    <!-- Particulars -->
    <div class="form-group">
        <label for="particulars">Particulars:</label>
        <input type="text" id="particulars" @bind="documentItem.Particulars" class="form-control" />
    </div>

    <!-- Quantity -->
    <div class="form-group">
        <label for="quantity">Quantity:</label>
        <input type="number" id="quantity" @bind="documentItem.Quantity" class="form-control" />
    </div>

    <!-- Unit Cost -->
    <div class="form-group">
        <label for="unitCost">Unit Cost:</label>
        <input type="number" id="unitCost" @bind="documentItem.UnitCost" class="form-control" />
    </div>

    <!-- Add button to add the item to the table -->
    <button class="btn btn-primary" @onclick="AddItem">Add Item</button>
</div>

@code {
    // Define a model for the document item
    private DocumentItemModel documentItem = new DocumentItemModel();

    // Define a list to store inputted items
    private List<DocumentItemModel> documentItems = new List<DocumentItemModel>();

    [Parameter]
    public EventCallback<List<DocumentItemModel>> OnItemsChanged { get; set; }

    // Define a class for the document item
    public class DocumentItemModel
    {
        public string Unit { get; set; }
        public string Particulars { get; set; }
        public int Quantity { get; set; }
        public decimal UnitCost { get; set; }
        public decimal Amount { get; set; }
    }

    // Add the item to the list and invoke the callback if fields are not blank
    private void AddItem()
    {
        if (!string.IsNullOrWhiteSpace(documentItem.Unit)
            && !string.IsNullOrWhiteSpace(documentItem.Particulars)
            && documentItem.Quantity > 0
            && documentItem.UnitCost > 0)
        {
            // Calculate Amount
            documentItem.Amount = documentItem.Quantity * documentItem.UnitCost;
            documentItems.Add(documentItem);
            documentItem = new DocumentItemModel(); // Clear the form fields
            OnItemsChanged.InvokeAsync(documentItems);
        }
    }
}
